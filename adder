#! /usr/local/bin/vvp
:ivl_version "10.1 (stable)" "(v10_1-107-gab6ae79)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "vhdl_sys";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x13bb180 .scope module, "behavioralFullAdder" "behavioralFullAdder" 2 8;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum"
    .port_info 1 /OUTPUT 1 "carryout"
    .port_info 2 /INPUT 1 "a"
    .port_info 3 /INPUT 1 "b"
    .port_info 4 /INPUT 1 "carryin"
L_0x7ff48b256060 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x13bebb0_0 .net *"_s10", 0 0, L_0x7ff48b256060;  1 drivers
v0x1408010_0 .net *"_s11", 1 0, L_0x140c540;  1 drivers
v0x14080f0_0 .net *"_s13", 1 0, L_0x140c6f0;  1 drivers
L_0x7ff48b2560a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x14081e0_0 .net *"_s16", 0 0, L_0x7ff48b2560a8;  1 drivers
v0x14082c0_0 .net *"_s17", 1 0, L_0x140c850;  1 drivers
v0x14083f0_0 .net *"_s3", 1 0, L_0x140c270;  1 drivers
L_0x7ff48b256018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x14084d0_0 .net *"_s6", 0 0, L_0x7ff48b256018;  1 drivers
v0x14085b0_0 .net *"_s7", 1 0, L_0x140c3c0;  1 drivers
o0x7ff48b29f198 .functor BUFZ 1, C4<z>; HiZ drive
v0x1408690_0 .net "a", 0 0, o0x7ff48b29f198;  0 drivers
o0x7ff48b29f1c8 .functor BUFZ 1, C4<z>; HiZ drive
v0x14087e0_0 .net "b", 0 0, o0x7ff48b29f1c8;  0 drivers
o0x7ff48b29f1f8 .functor BUFZ 1, C4<z>; HiZ drive
v0x14088a0_0 .net "carryin", 0 0, o0x7ff48b29f1f8;  0 drivers
v0x1408960_0 .net "carryout", 0 0, L_0x140c050;  1 drivers
v0x1408a20_0 .net "sum", 0 0, L_0x140c150;  1 drivers
L_0x140c050 .part L_0x140c850, 1, 1;
L_0x140c150 .part L_0x140c850, 0, 1;
L_0x140c270 .concat [ 1 1 0 0], o0x7ff48b29f198, L_0x7ff48b256018;
L_0x140c3c0 .concat [ 1 1 0 0], o0x7ff48b29f1c8, L_0x7ff48b256060;
L_0x140c540 .arith/sum 2, L_0x140c270, L_0x140c3c0;
L_0x140c6f0 .concat [ 1 1 0 0], o0x7ff48b29f1f8, L_0x7ff48b2560a8;
L_0x140c850 .arith/sum 2, L_0x140c540, L_0x140c6f0;
S_0x13be6a0 .scope module, "testFullAdder" "testFullAdder" 3 6;
 .timescale -9 -12;
v0x140bca0_0 .var "a", 3 0;
v0x140bd80_0 .var "b", 3 0;
v0x140be20_0 .net "carryout", 0 0, L_0x140ea90;  1 drivers
v0x140bec0_0 .net "overflow", 0 0, L_0x140f020;  1 drivers
v0x140bf60_0 .net "sum", 3 0, L_0x140ebf0;  1 drivers
S_0x1408b80 .scope module, "adder" "FullAdder4bit" 3 12, 2 40 0, S_0x13be6a0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 4 "sum"
    .port_info 1 /OUTPUT 1 "carryout"
    .port_info 2 /OUTPUT 1 "overflow"
    .port_info 3 /INPUT 4 "a"
    .port_info 4 /INPUT 4 "b"
L_0x140f020/d .functor XOR 1, L_0x140ea90, L_0x140f170, C4<0>, C4<0>;
L_0x140f020 .delay 1 (50000,50000,50000) L_0x140f020/d;
v0x140b390_0 .net *"_s28", 0 0, L_0x140f170;  1 drivers
v0x140b490_0 .net "a", 3 0, v0x140bca0_0;  1 drivers
v0x140b570_0 .net "b", 3 0, v0x140bd80_0;  1 drivers
v0x140b630_0 .net "carry1in", 0 0, L_0x140cef0;  1 drivers
v0x140b720_0 .net "carry2in", 0 0, L_0x140d860;  1 drivers
v0x140b860_0 .net "carry3in", 0 0, L_0x140e140;  1 drivers
v0x140b950_0 .net "carryout", 0 0, L_0x140ea90;  alias, 1 drivers
v0x140b9f0_0 .net "overflow", 0 0, L_0x140f020;  alias, 1 drivers
v0x140ba90_0 .net "sum", 3 0, L_0x140ebf0;  alias, 1 drivers
L_0x140d0a0 .part v0x140bca0_0, 0, 1;
L_0x140d200 .part v0x140bd80_0, 0, 1;
L_0x140d9c0 .part v0x140bca0_0, 1, 1;
L_0x140db20 .part v0x140bd80_0, 1, 1;
L_0x140e2a0 .part v0x140bca0_0, 2, 1;
L_0x140e490 .part v0x140bd80_0, 2, 1;
L_0x140ebf0 .concat8 [ 1 1 1 1], L_0x140c9e0, L_0x140d3b0, L_0x140dc40, L_0x140e630;
L_0x140ee90 .part v0x140bca0_0, 3, 1;
L_0x140ef80 .part v0x140bd80_0, 3, 1;
L_0x140f170 .part L_0x140ebf0, 3, 1;
S_0x1408da0 .scope module, "adder0" "structuralFullAdder" 2 52, 2 20 0, S_0x1408b80;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum"
    .port_info 1 /OUTPUT 1 "carryout"
    .port_info 2 /INPUT 1 "A"
    .port_info 3 /INPUT 1 "B"
    .port_info 4 /INPUT 1 "carryin"
L_0x140c5e0/d .functor XOR 1, L_0x140d0a0, L_0x140d200, C4<0>, C4<0>;
L_0x140c5e0 .delay 1 (50000,50000,50000) L_0x140c5e0/d;
L_0x7ff48b2560f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x140c9e0/d .functor XOR 1, L_0x140c5e0, L_0x7ff48b2560f0, C4<0>, C4<0>;
L_0x140c9e0 .delay 1 (50000,50000,50000) L_0x140c9e0/d;
L_0x140cb90/d .functor AND 1, L_0x140d0a0, L_0x140d200, C4<1>, C4<1>;
L_0x140cb90 .delay 1 (50000,50000,50000) L_0x140cb90/d;
L_0x140cd90/d .functor AND 1, L_0x140c5e0, L_0x7ff48b2560f0, C4<1>, C4<1>;
L_0x140cd90 .delay 1 (50000,50000,50000) L_0x140cd90/d;
L_0x140cef0/d .functor OR 1, L_0x140cd90, L_0x140cb90, C4<0>, C4<0>;
L_0x140cef0 .delay 1 (50000,50000,50000) L_0x140cef0/d;
v0x1409040_0 .net "A", 0 0, L_0x140d0a0;  1 drivers
v0x1409120_0 .net "AandB", 0 0, L_0x140cb90;  1 drivers
v0x14091e0_0 .net "AxorB", 0 0, L_0x140c5e0;  1 drivers
v0x14092b0_0 .net "AxorBandC", 0 0, L_0x140cd90;  1 drivers
v0x1409370_0 .net "B", 0 0, L_0x140d200;  1 drivers
v0x1409480_0 .net "carryin", 0 0, L_0x7ff48b2560f0;  1 drivers
v0x1409540_0 .net "carryout", 0 0, L_0x140cef0;  alias, 1 drivers
v0x1409600_0 .net "sum", 0 0, L_0x140c9e0;  1 drivers
S_0x1409760 .scope module, "adder1" "structuralFullAdder" 2 53, 2 20 0, S_0x1408b80;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum"
    .port_info 1 /OUTPUT 1 "carryout"
    .port_info 2 /INPUT 1 "A"
    .port_info 3 /INPUT 1 "B"
    .port_info 4 /INPUT 1 "carryin"
L_0x140d2f0/d .functor XOR 1, L_0x140d9c0, L_0x140db20, C4<0>, C4<0>;
L_0x140d2f0 .delay 1 (50000,50000,50000) L_0x140d2f0/d;
L_0x140d3b0/d .functor XOR 1, L_0x140d2f0, L_0x140cef0, C4<0>, C4<0>;
L_0x140d3b0 .delay 1 (50000,50000,50000) L_0x140d3b0/d;
L_0x140d5a0/d .functor AND 1, L_0x140d9c0, L_0x140db20, C4<1>, C4<1>;
L_0x140d5a0 .delay 1 (50000,50000,50000) L_0x140d5a0/d;
L_0x140d700/d .functor AND 1, L_0x140d2f0, L_0x140cef0, C4<1>, C4<1>;
L_0x140d700 .delay 1 (50000,50000,50000) L_0x140d700/d;
L_0x140d860/d .functor OR 1, L_0x140d700, L_0x140d5a0, C4<0>, C4<0>;
L_0x140d860 .delay 1 (50000,50000,50000) L_0x140d860/d;
v0x14099d0_0 .net "A", 0 0, L_0x140d9c0;  1 drivers
v0x1409a90_0 .net "AandB", 0 0, L_0x140d5a0;  1 drivers
v0x1409b50_0 .net "AxorB", 0 0, L_0x140d2f0;  1 drivers
v0x1409c20_0 .net "AxorBandC", 0 0, L_0x140d700;  1 drivers
v0x1409ce0_0 .net "B", 0 0, L_0x140db20;  1 drivers
v0x1409df0_0 .net "carryin", 0 0, L_0x140cef0;  alias, 1 drivers
v0x1409e90_0 .net "carryout", 0 0, L_0x140d860;  alias, 1 drivers
v0x1409f30_0 .net "sum", 0 0, L_0x140d3b0;  1 drivers
S_0x140a0c0 .scope module, "adder2" "structuralFullAdder" 2 54, 2 20 0, S_0x1408b80;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum"
    .port_info 1 /OUTPUT 1 "carryout"
    .port_info 2 /INPUT 1 "A"
    .port_info 3 /INPUT 1 "B"
    .port_info 4 /INPUT 1 "carryin"
L_0x140da60/d .functor XOR 1, L_0x140e2a0, L_0x140e490, C4<0>, C4<0>;
L_0x140da60 .delay 1 (50000,50000,50000) L_0x140da60/d;
L_0x140dc40/d .functor XOR 1, L_0x140da60, L_0x140d860, C4<0>, C4<0>;
L_0x140dc40 .delay 1 (50000,50000,50000) L_0x140dc40/d;
L_0x140de30/d .functor AND 1, L_0x140e2a0, L_0x140e490, C4<1>, C4<1>;
L_0x140de30 .delay 1 (50000,50000,50000) L_0x140de30/d;
L_0x140dfe0/d .functor AND 1, L_0x140da60, L_0x140d860, C4<1>, C4<1>;
L_0x140dfe0 .delay 1 (50000,50000,50000) L_0x140dfe0/d;
L_0x140e140/d .functor OR 1, L_0x140dfe0, L_0x140de30, C4<0>, C4<0>;
L_0x140e140 .delay 1 (50000,50000,50000) L_0x140e140/d;
v0x140a340_0 .net "A", 0 0, L_0x140e2a0;  1 drivers
v0x140a400_0 .net "AandB", 0 0, L_0x140de30;  1 drivers
v0x140a4c0_0 .net "AxorB", 0 0, L_0x140da60;  1 drivers
v0x140a590_0 .net "AxorBandC", 0 0, L_0x140dfe0;  1 drivers
v0x140a650_0 .net "B", 0 0, L_0x140e490;  1 drivers
v0x140a760_0 .net "carryin", 0 0, L_0x140d860;  alias, 1 drivers
v0x140a800_0 .net "carryout", 0 0, L_0x140e140;  alias, 1 drivers
v0x140a8a0_0 .net "sum", 0 0, L_0x140dc40;  1 drivers
S_0x140aa30 .scope module, "adder3" "structuralFullAdder" 2 55, 2 20 0, S_0x1408b80;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum"
    .port_info 1 /OUTPUT 1 "carryout"
    .port_info 2 /INPUT 1 "A"
    .port_info 3 /INPUT 1 "B"
    .port_info 4 /INPUT 1 "carryin"
L_0x140e5c0/d .functor XOR 1, L_0x140ee90, L_0x140ef80, C4<0>, C4<0>;
L_0x140e5c0 .delay 1 (50000,50000,50000) L_0x140e5c0/d;
L_0x140e630/d .functor XOR 1, L_0x140e5c0, L_0x140e140, C4<0>, C4<0>;
L_0x140e630 .delay 1 (50000,50000,50000) L_0x140e630/d;
L_0x140e780/d .functor AND 1, L_0x140ee90, L_0x140ef80, C4<1>, C4<1>;
L_0x140e780 .delay 1 (50000,50000,50000) L_0x140e780/d;
L_0x140e930/d .functor AND 1, L_0x140e5c0, L_0x140e140, C4<1>, C4<1>;
L_0x140e930 .delay 1 (50000,50000,50000) L_0x140e930/d;
L_0x140ea90/d .functor OR 1, L_0x140e930, L_0x140e780, C4<0>, C4<0>;
L_0x140ea90 .delay 1 (50000,50000,50000) L_0x140ea90/d;
v0x140ac80_0 .net "A", 0 0, L_0x140ee90;  1 drivers
v0x140ad60_0 .net "AandB", 0 0, L_0x140e780;  1 drivers
v0x140ae20_0 .net "AxorB", 0 0, L_0x140e5c0;  1 drivers
v0x140aef0_0 .net "AxorBandC", 0 0, L_0x140e930;  1 drivers
v0x140afb0_0 .net "B", 0 0, L_0x140ef80;  1 drivers
v0x140b0c0_0 .net "carryin", 0 0, L_0x140e140;  alias, 1 drivers
v0x140b160_0 .net "carryout", 0 0, L_0x140ea90;  alias, 1 drivers
v0x140b200_0 .net "sum", 0 0, L_0x140e630;  1 drivers
    .scope S_0x13be6a0;
T_0 ;
    %vpi_call 3 15 "$dumpfile", "adder.vcd" {0 0 0};
    %vpi_call 3 16 "$dumpvars" {0 0 0};
    %vpi_call 3 17 "$display", "Four Bit Full Adder positive + positive Tests" {0 0 0};
    %vpi_call 3 18 "$display", " A   |  B   | Sum  | Carryout | Overflow | Sum Exp | Carryout Exp | Overflow Exp" {0 0 0};
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 20 "$display", "%b | %b | %b |   %b      |    %b     |  0000   | 0            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 22 "$display", "%b | %b | %b |   %b      |    %b     |  0001   | 0            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 24 "$display", "%b | %b | %b |   %b      |    %b     |  0001   | 0            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 4, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 26 "$display", "%b | %b | %b |   %b      |    %b     |  0111   | 0            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %vpi_call 3 28 "$display", "\012\012Four Bit Full Adder negative + negative Tests" {0 0 0};
    %vpi_call 3 29 "$display", " A   |  B   | Sum  | Carryout | Overflow | Sum Exp | Carryout Exp | Overflow Exp" {0 0 0};
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 31 "$display", "%b | %b | %b |   %b      |    %b     |  1110   | 1            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 13, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 13, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 33 "$display", "%b | %b | %b |   %b      |    %b     |  1010   | 1            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 35 "$display", "%b | %b | %b |   %b      |    %b     |  0001   | 1            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 11, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 11, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 37 "$display", "%b | %b | %b |   %b      |    %b     |  0110   | 1            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %vpi_call 3 39 "$display", "\012\012Four Bit Full Adder negative + positive Tests" {0 0 0};
    %vpi_call 3 40 "$display", " A   |  B   | Sum  | Carryout | Overflow | Sum Exp | Carryout Exp | Overflow Exp" {0 0 0};
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 42 "$display", "%b | %b | %b |   %b      |    %b     |  1000   | 1            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 8, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 44 "$display", "%b | %b | %b |   %b      |    %b     |  1001   | 0            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 46 "$display", "%b | %b | %b |   %b      |    %b     |  1001   | 0            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 48 "$display", "%b | %b | %b |   %b      |    %b     |  0110   | 1            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %vpi_call 3 51 "$display", "\012\012Four Bit Full Adder Overflow Tests" {0 0 0};
    %vpi_call 3 52 "$display", " A   |  B   | Sum  | Carryout | Overflow | Sum Exp | Carryout Exp | Overflow Exp" {0 0 0};
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 54 "$display", "%b | %b | %b |   %b      |    %b     |  1000   | 1            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 56 "$display", "%b | %b | %b |   %b      |    %b     |  0110   | 1            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 58 "$display", "%b | %b | %b |   %b      |    %b     |  1001   | 0            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 60 "$display", "%b | %b | %b |   %b      |    %b     |  0111   | 0            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %vpi_call 3 62 "$display", "\012\012Four Bit Full Adder Carryout Tests" {0 0 0};
    %vpi_call 3 63 "$display", " A   |  B   | Sum  | Carryout | Overflow | Sum Exp | Carryout Exp | Overflow Exp" {0 0 0};
    %pushi/vec4 9, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 65 "$display", "%b | %b | %b |   %b      |    %b     |  1000   | 1            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 67 "$display", "%b | %b | %b |   %b      |    %b     |  0110   | 1            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 1, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 69 "$display", "%b | %b | %b |   %b      |    %b     |  1000   | 0            | 1", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x140bca0_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x140bd80_0, 0, 4;
    %delay 5000000, 0;
    %vpi_call 3 71 "$display", "%b | %b | %b |   %b      |    %b     |  0101   | 0            | 0", v0x140bca0_0, v0x140bd80_0, v0x140bf60_0, v0x140be20_0, v0x140bec0_0 {0 0 0};
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "./adder.v";
    "adder.t.v";
